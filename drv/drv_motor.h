#ifndef DRV_MOTOR_H_
#define DRV_MOTOR_H_

#include "fsl_gpio.h"
#include "pin_mux.h"

static inline void drv_led_autohold_toggle()
{
	uint8_t state = 0;
	state = GPIO_PinRead(BOARD_INITPINS_LED_AUTO_GPIO, BOARD_INITPINS_LED_AUTO_PORT, BOARD_INITPINS_LED_AUTO_PIN);
	GPIO_PinWrite(BOARD_INITPINS_LED_AUTO_GPIO, BOARD_INITPINS_LED_AUTO_PORT, BOARD_INITPINS_LED_AUTO_PIN, !state);
}

static inline void drv_led_autohold_on()
{
	GPIO_PinWrite(BOARD_INITPINS_LED_AUTO_GPIO, BOARD_INITPINS_LED_AUTO_PORT, BOARD_INITPINS_LED_AUTO_PIN, 1);
}

static inline void drv_led_autohold_off()
{
	GPIO_PinWrite(BOARD_INITPINS_LED_AUTO_GPIO, BOARD_INITPINS_LED_AUTO_PORT, BOARD_INITPINS_LED_AUTO_PIN, 0);
}

static inline void drv_led_breaking_on()
{
	GPIO_PinWrite(BOARD_INITPINS_LED_BRAKE_GPIO, BOARD_INITPINS_LED_BRAKE_PORT, BOARD_INITPINS_LED_BRAKE_PIN, 1);
}

static inline void drv_led_breaking_off()
{
	GPIO_PinWrite(BOARD_INITPINS_LED_BRAKE_GPIO, BOARD_INITPINS_LED_BRAKE_PORT, BOARD_INITPINS_LED_BRAKE_PIN, 0);
}

static inline void drv_motor_run_fwd()
{
	GPIO_PinWrite(BOARD_INITPINS_MOTOR_FWD_GPIO, BOARD_INITPINS_MOTOR_FWD_PORT, BOARD_INITPINS_MOTOR_FWD_PIN, 1);
	GPIO_PinWrite(BOARD_INITPINS_MOTOR_REV_GPIO, BOARD_INITPINS_MOTOR_REV_PORT, BOARD_INITPINS_MOTOR_REV_PIN, 0);
}

static inline void drv_motor_run_rev()
{
	GPIO_PinWrite(BOARD_INITPINS_MOTOR_FWD_GPIO, BOARD_INITPINS_MOTOR_FWD_PORT, BOARD_INITPINS_MOTOR_FWD_PIN, 0);
	GPIO_PinWrite(BOARD_INITPINS_MOTOR_REV_GPIO, BOARD_INITPINS_MOTOR_REV_PORT, BOARD_INITPINS_MOTOR_REV_PIN, 1);
}

static inline void drv_motor_run_stop()
{
	GPIO_PinWrite(BOARD_INITPINS_MOTOR_FWD_GPIO, BOARD_INITPINS_MOTOR_FWD_PORT, BOARD_INITPINS_MOTOR_FWD_PIN, 0);
	GPIO_PinWrite(BOARD_INITPINS_MOTOR_REV_GPIO, BOARD_INITPINS_MOTOR_REV_PORT, BOARD_INITPINS_MOTOR_REV_PIN, 0);
}


void drv_motor_breaking();
void drv_motor_debreaking();

#endif /* DRV_MOTOR_H_ */
